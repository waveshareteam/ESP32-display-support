[1/5] cd /home/lzw/Desktop/Work/esp-iot-solution/examples/display/lcd/lcd_with_te_sh8601/components/esp_lcd_sh8601/test_apps/build/esp-idf/esptool_py && /home/lzw/.espressif/python_env/idf5.2_py3.11_env/bin/python /home/lzw/esp/work/esp-idf-gitlab/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/lzw/Desktop/Work/esp-iot-solution/examples/display/lcd/lcd_with_te_sh8601/components/esp_lcd_sh8601/test_apps/build/partition_table/partition-table.bin /home/lzw/Desktop/Work/esp-iot-solution/examples/display/lcd/lcd_with_te_sh8601/components/esp_lcd_sh8601/test_apps/build/test_esp_lcd_gc9b71.bin
test_esp_lcd_gc9b71.bin binary size 0x408b0 bytes. Smallest app partition is 0x100000 bytes. 0xbf750 bytes (75%) free.
[2/5] Performing build step for 'bootloader'
[1/1] cd /home/lzw/Desktop/Work/esp-iot-solution/examples/display/lcd/lcd_with_te_sh8601/components/esp_lcd_sh8601/test_apps/build/bootloader/esp-idf/esptool_py && /home/lzw/.espressif/python_env/idf5.2_py3.11_env/bin/python /home/lzw/esp/work/esp-idf-gitlab/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /home/lzw/Desktop/Work/esp-iot-solution/examples/display/lcd/lcd_with_te_sh8601/components/esp_lcd_sh8601/test_apps/build/bootloader/bootloader.bin
Bootloader binary size 0x5240 bytes. 0x2dc0 bytes (36%) free.
[2/3] cd /home/lzw/esp/work/esp-idf-gitlab/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/lzw/esp/work/esp-idf-gitlab -D "SERIAL_TOOL=/home/lzw/.espressif/python_env/idf5.2_py3.11_env/bin/python;;/home/lzw/esp/work/esp-idf-gitlab/components/esptool_py/esptool/esptool.py;--chip;esp32s3" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/lzw/Desktop/Work/esp-iot-solution/examples/display/lcd/lcd_with_te_sh8601/components/esp_lcd_sh8601/test_apps/build -P /home/lzw/esp/work/esp-idf-gitlab/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32s3 -p /dev/ttyUSB0 -b 921600 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 2MB 0x0 bootloader/bootloader.bin 0x10000 test_esp_lcd_gc9b71.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.0
Serial port /dev/ttyUSB0
Connecting....
Chip is ESP32-S3 (QFN56) (revision v0.2)
Features: WiFi, BLE, Unknown Embedded PSRAM (AP_1v8)
Crystal is 40MHz
MAC: 30:30:f9:5a:8e:60
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 921600
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x00050fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 21056 bytes to 13074...
Writing at 0x00000000... (100 %)
Wrote 21056 bytes (13074 compressed) at 0x00000000 in 0.4 seconds (effective 459.6 kbit/s)...
Hash of data verified.
Compressed 264368 bytes to 136210...
Writing at 0x00010000... (11 %)
Writing at 0x0001c58a... (22 %)
Writing at 0x000250c4... (33 %)
Writing at 0x0002b505... (44 %)
Writing at 0x00031873... (55 %)
Writing at 0x000390f1... (66 %)
Writing at 0x00041f52... (77 %)
Writing at 0x00047d62... (88 %)
Writing at 0x0004e55c... (100 %)
Wrote 264368 bytes (136210 compressed) at 0x00010000 in 2.0 seconds (effective 1047.7 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 673.5 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
